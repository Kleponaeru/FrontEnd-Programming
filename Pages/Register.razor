@page "/register"
@inject NavigationManager Navigation
@using System
@using System.ComponentModel.DataAnnotations
@using System.Net.Http
@inject HttpClient Http
@using System.Net.Http.Json
@* @inherits Models.RegisterModel *@

<style>
    /* Style for the form container */
    .form-container {
        width: 300px;
        margin: 0 auto;
        padding: 20px;
        background-color: #fff;
        border-radius: 10px;
        text-align: center;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    }

    /* Style for labels */
    label {
        display: block;
        margin-bottom: 10px;
        font-weight: bold;
        color: #333;
    }

    /* Style for text and password inputs */
    .form-control {
        width: 100%;
        padding: 10px;
        margin-bottom: 15px;
        border: 1px solid #ccc;
        border-radius: 5px;
        font-size: 16px;
    }

    /* Style for the select element */
    select.form-control {
        width: 100%;
        padding: 10px;
        margin-bottom: 15px;
        border: 1px solid #ccc;
        border-radius: 5px;
        font-size: 16px;
    }

    /* Style for the submit button */
    .btn-container {
        margin-top: 20px;
    }

    /* Style for the button */
    .btn {
        color: #fff;
        padding: 15px 0;
        width: 100%;
        border: none;
        border-radius: 5px;
        font-size: 16px;
        cursor: pointer;
    }

    /* Style for the primary button */
    .btn-primary {
        background-color: #198754;
    }

    /* Style for the secondary button */
    .btn-secondary {
        background-color: #ffc107;
    }

    /* Style for button hover effect */
    .btn:hover {
        filter: brightness(1.2);
    }

    /* Style for the horizontal line */
    .divider {
        border-top: 1px solid #ccc;
        margin: 15px 0;
    }
</style>


<div class="card"
    style="width: 340px; max-width: 100%; margin: 0 auto; display: flex; flex-direction: column; justify-content: center;">
    <div class="card-header" style="text-align: center;">
        <h3 class="card-title">REGISTER</h3>
    </div>
    <EditForm Model="@register" OnValidSubmit="addUser">
        <DataAnnotationsValidator />
        <ValidationSummary />
        <div class="card-body">
            <div class="form-container">
                <div class="form-group">
                    <label for="username">Username</label>
                    <InputText id="username" name="username" class="form-control"
                        @bind-Value="register.Username" />
                    <ValidationMessage For="@(() => register.Username)" />
                </div>

                <div class="form-group">
                    <label for="password">Password</label>
                    <InputText id="password" name="password" class="form-control" type="password"
                        @bind-Value="register.Password" />
                    <ValidationMessage For="@(() => register.Password)" />
                </div>

                <div class="form-group">
                    <label for="no_telp">Nomor Telepon</label>
                    <InputText id="no_telp" name="no_telp" class="form-control" @bind-Value="register.NoTelp" />
                    <ValidationMessage For="@(() => register.NoTelp)" />
                </div>
                <div class="form-group">
                    <label for="register_as">Register As</label>
                    <InputText id="register_as" name="register_as" class="form-control" @bind-Value="register.RegisterAs" />
                    <ValidationMessage For="@(() => register.RegisterAs)" />
                </div>

                @* <div class="form-group">
                    <label for="loginas">Register As</label>
                    <InputSelect id="loginas" name="loginas" class="form-control" style="width: 100%;"
                        @bind-Value="register.RegisterAs">
                        <option value="Pengguna Rumahan">Pengguna Rumahan</option>
                        <option value="Pengambil Sampah">Pengambil Sampah</option>
                        <option value="Bank Sampah">Bank Sampah</option>
                    </InputSelect>
                    <ValidationMessage For="@(() => register.RegisterAs)" />
                </div> *@

                <button type="submit" class="btn btn-primary">REGISTER</button>
                <div class="divider">OR</div>
                <button type="button" class="btn btn-secondary" style="color: black;" @onclick="login">LOGIN</button>
            </div>
        </div>
    </EditForm>
</div>

@code {

    private RegisterModel register = new();

    private void login()
    {
        Navigation.NavigateTo("/");
    }
    public class RegisterModel
    {
        [Required(ErrorMessage = "Username is required.")]
        public string? Username { get; set; }

        [Required(ErrorMessage = "Password is required.")]
        [DataType(DataType.Password)]
        public string? Password { get; set; }

        [Required(ErrorMessage = "Nomor Telepon is required.")]
        [RegularExpression(@"^\d{10,15}$", ErrorMessage = "Nomor Telepon must be a valid number with 10-15 digits.")]
        public string? NoTelp { get; set; }
        public string? RegisterAs { get; set; }
    }
    public async Task addUser()
    {   
        await Http.PostAsJsonAsync("http://localhost:5030/Slim3/public/api/fe/regis", register);
    }

}
